#define dirPin1 2
#define stepPin1 3
#define stepPin2 5
#define dirPin2 6
#define stepsPerRevolution 200

// defines Ultrasonic pins numbers
const int trigPin = 8;
const int echoPin = 9;
int ref = 10;

// defines variables
long duration;
int distance;

float freq = 0;
int h = 750;
int K = 4000;

void setup() {
  // Declare pins as output:
  pinMode(stepPin1, OUTPUT);
  pinMode(dirPin1, OUTPUT);
  pinMode(stepPin2, OUTPUT);
  pinMode(dirPin2, OUTPUT);

  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600); // Starts the serial communication
}

void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance= duration*0.034/2;
  // Prints the distance on the Serial Monitor

  int error = ref - distance;
 
  //Set the spinning direction counterclockwise:
  if(error<0)  digitalWrite(dirPin1, LOW);
  else digitalWrite(dirPin1, HIGH);

//  freq = (float)abs(error);
  h = K/abs(error);
  if(h<500) h=500;
  else if(h>900) h=900;
  // Spin the stepper motor 1 revolution quickly:
  for (int i = 0; i < stepsPerRevolution; i++) {
    // These four lines result in 1 step:
    digitalWrite(stepPin1, HIGH);
    delayMicroseconds(h);
    digitalWrite(stepPin1, LOW);
    delayMicroseconds(h);
  }

  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.print("   error: ");
  Serial.print(error);
  Serial.print("   freq: ");
  Serial.print(freq);
  Serial.print("   Delay: ");
  Serial.println(h);
}
